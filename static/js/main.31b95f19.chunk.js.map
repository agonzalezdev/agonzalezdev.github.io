{"version":3,"sources":["img/cv_img.jpg","component/header.tsx","pages/home.tsx","component/portfolio.tsx","pages/portfolio.tsx","component/navBar.tsx","Router.tsx","component/dynamicBackground.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["AvatarImg","Home","AssignmentInd","Apps","ContactMail","withTheme","styled","Avatar","props","theme","spacing","MainContainer","Box","Title","Typography","Subtitle","Header","Grid","container","justify","src","CVImg","alt","variant","strings","typeSpeed","loop","backSpeed","ResumeCV","CV","PortfolioComponent","className","personalData","name","title","image","contacts","type","value","sections","content","icon","groups","sectionHeader","description","items","projectUrl","branding","MenuContainer","AvatarImage","baseFontColor","css","MainBar","AppBar","MainToolBar","Toolbar","NavBarListIcon","ListItemIcon","NavBarListText","ListItemText","menuItems","text","path","Navbar","useState","right","showMenu","setShowMenu","toggleSlider","slider","open","component","position","IconButton","onClick","MenuOpen","style","color","anchor","onClose","Divider","List","map","item","key","ListItem","button","Link","to","AppRouter","exact","id","options","background","fpsLimit","fullScreen","enable","pauseOnBlur","interactivity","detectsOn","events","onHover","mode","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","links","width","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","App","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","initialState","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0SAAe,MAA0B,mC,yCC4BnCA,GAjBKC,EAAA,EAIAC,EAAA,EAIAC,EAAA,EAIAC,EAAA,EAKOC,YAAUC,YAAOC,IAAPD,CAAA,IAAD,iFACd,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,OAC5B,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,OAC7B,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,SAGrCC,EAAgBL,YAAOM,IAAPN,CAAH,0KAUbO,EAAQP,YAAOQ,IAAPR,CAAH,oEAKLS,EAAWT,YAAOQ,IAAPR,CAAH,sEAiCCU,EA5BA,WAEb,OACE,mCACA,eAACL,EAAD,WACE,cAACM,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,SAAzB,SACE,cAACnB,EAAD,CAAWoB,IAAKC,EAAOC,IAAI,uBAE7B,cAACT,EAAD,CAAOU,QAAQ,KAAf,SACE,cAAC,IAAD,CACAC,QAAS,CAAC,oBACVC,UAAW,GACXC,MAAO,MAGT,uBACA,cAACX,EAAD,CAAUQ,QAAQ,KAAlB,SACE,cAAC,IAAD,CACAC,QAAS,CAAC,yCAA0C,0CAA2C,kCAAmC,wBAAwB,yBAA0B,4BACpLC,UAAW,GACXE,UAAW,aCvEJ,aACb,OACE,mCACE,cAAC,EAAD,O,SCAAC,EAAWtB,YAAOuB,IAAPvB,CAAH,yEAsECwB,EA9DY,WACvB,OACI,cAACF,EAAD,CACAG,UAAW,OACXC,aAAc,CACZC,KAAM,mBACNC,MAAO,8BACPC,MAAM,GAAD,OAAKd,GACVe,SAAU,CACR,CAAEC,KAAM,QAASC,MAAO,+BACxB,CAAED,KAAM,QAASC,MAAO,iBACxB,CAAED,KAAM,WAAYC,MAAO,aAC3B,CAAED,KAAM,UAAWC,MAAO,0BAC1B,CAAED,KAAM,WAAYC,MAAO,2CAC3B,CAAED,KAAM,UAAWC,MAAO,eAC1B,CAAED,KAAM,SAAUC,MAAO,6BAE7BC,SAAW,CACT,CACAF,KAAM,OACNH,MAAO,WACPM,QAAS,8FACTC,KAAM,WAEN,CACEJ,KAAM,gBACNH,MAAO,gBACPO,KAAM,SACNC,OAAQ,CACN,CACEC,cAAe,UACfC,YAAa,4FACbC,MAAO,CACL,CAAEX,MAAO,WAAYY,WAAY,uBAAwBF,YAAa,qEACtE,CAAEV,MAAO,qBAAsBY,WAAY,cAAeF,YAAa,wDACvE,CAAEV,MAAO,UAAWY,WAAY,cAAeF,YAAa,6EAGhE,CACED,cAAe,aACfC,YAAa,iDACbC,MAAO,CACL,CAAEX,MAAO,eAAgBY,WAAY,kBAAmBF,YAAa,0DACrE,CAAEV,MAAO,MAAOY,WAAY,UAAWF,YAAa,mDACpD,CAAEV,MAAO,OAAQY,WAAY,WAAYF,YAAa,uCAG1D,CACED,cAAe,6BACfC,YAAa,8CACbC,MAAO,CACL,CAAEX,MAAO,yBAAuBU,YAAa,+BAMvDG,UAAU,KCpEH,aACb,OACE,mCACE,cAAC,EAAD,O,wHCGAC,GAAgB1C,YAAOM,IAAPN,CAAH,2GASb2C,GAAc5C,YAAUC,YAAOC,IAAPD,CAAA,MAAD,yHAIhB,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,OAC5B,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,QAIrCwC,GAAgBC,YAAH,2CAIbC,GAAU9C,YAAO+C,IAAP/C,CAAH,+DAMPgD,GAAchD,YAAOiD,IAAPjD,CAAH,+DAMXkD,GAAiBlD,YAAOmD,IAAPnD,CAAH,iDAEd4C,IAIAQ,GAAiBpD,YAAOqD,IAAPrD,CAAH,kCAChB4C,IAGEU,GAAY,CAChB,CACEnB,KAAM,cAACxC,EAAA,EAAD,IACN4D,KAAM,OACNC,KAAM,KAER,CACErB,KAAM,cAACvC,EAAA,EAAD,IACN2D,KAAM,UAER,CACEpB,KAAM,cAACtC,EAAA,EAAD,IACN0D,KAAM,YACNC,KAAM,cAER,CACErB,KAAM,cAACrC,EAAA,EAAD,IACNyD,KAAM,YAqDKE,GAjDA,WAAO,IAAD,EAEWC,mBAAS,CACrCC,OAAO,IAHU,mBAEdC,EAFc,KAEJC,EAFI,KAMbC,EAAe,SAACC,EAAQC,GAC5BH,EAAY,2BAAID,GAAL,kBAAgBG,EAASC,MAmBtC,OACE,mCACA,cAAC1D,EAAA,EAAD,CAAK2D,UAAU,MAAf,SACE,eAACnB,GAAD,CAASoB,SAAS,SAAlB,UACE,eAAClB,GAAD,WACE,cAACmB,GAAA,EAAD,CAAYC,QAAS,kBAAMN,EAAa,SAAS,IAAjD,SACE,cAACO,GAAA,EAAD,CAAUC,MAAO,CAACC,MAAO,eAE3B,cAAC/D,EAAA,EAAD,CAAYS,QAAQ,KAAMqD,MAAO,CAACC,MAAO,OAAzC,iCAEF,cAAC,KAAD,CACAC,OAAO,QACPR,KAAMJ,EAASD,MACfc,QAAS,kBAAMX,EAAa,SAAS,IAHrC,SAzBJ,eAACpB,GAAD,CAAeuB,UAAU,MAAMG,QAAS,kBAAMN,EAAa,SAAS,IAApE,UACE,cAACnB,GAAD,CAAa7B,IAAKC,EAAOC,IAAI,qBAC7B,cAAC0D,EAAA,EAAD,IACA,cAACC,GAAA,EAAD,UACGrB,GAAUsB,KAAI,SAACC,EAAKC,GAAN,OAEb,cADA,CACCC,GAAA,EAAD,CAAUC,QAAM,EAAWf,UAAWgB,IAAMC,GAAIL,EAAKrB,KAArD,UACE,cAACN,GAAD,UAAiB2B,EAAK1C,OACtB,cAACiB,GAAD,UAAiByB,EAAKtB,SAFFuB,qBCrEhBK,OAZf,WACE,OACE,eAAC,IAAD,WACI,cAAC,GAAD,IACA,cAAC,IAAD,CAAO3B,KAAK,IAAI4B,OAAK,EAACnB,UAAW,kBAAM,cAAC,EAAD,OACvC,cAAC,IAAD,CAAOT,KAAK,aAAaS,UAAW,kBAAM,cAAC,EAAD,W,8BCXpC,cACb,OAGA,cAAC,KAAD,CACAoB,GAAG,cACHC,QAAS,CACPC,WAAY,CACVhB,MAAO,CACLvC,MAAO,YAGXwD,SAAU,GACVC,WAAY,CAAEC,QAAQ,GACtBC,aAAa,EACbC,cAAe,CACbC,UAAW,SACXC,OAAQ,CACNC,QAAS,CACPL,QAAQ,EACRM,KAAM,WAERC,QAAQ,GAEVC,MAAO,CACLC,OAAQ,CACNC,SAAU,IACVC,SAAU,EACVC,QAAS,GACTC,KAAM,IAERC,KAAM,CACJC,SAAU,GAEZC,QAAS,CACPN,SAAU,IACVC,SAAU,MAIhBM,UAAW,CACTpC,MAAO,CACLvC,MAAO,WAET4E,MAAO,CACLrC,MAAO,UACP6B,SAAU,IACVV,QAAQ,EACRY,QAAS,GACTO,MAAO,GAETC,WAAY,CACVpB,QAAQ,GAEVqB,KAAM,CACJC,UAAW,OACXtB,QAAQ,EACRuB,QAAS,SACTC,QAAQ,EACRC,MAAO,EACPC,UAAU,GAEZC,OAAQ,CACNC,QAAS,CACP5B,QAAQ,EACR6B,WAAY,KAEdvF,MAAO,IAETsE,QAAS,CACPtE,MAAO,IAETwF,MAAO,CACLzF,KAAM,UAERwE,KAAM,CACJW,QAAQ,EACRlF,MAAO,QCjEAyF,OATf,WACE,OACE,qCACA,cAAC,GAAD,IACA,cAAC,GAAD,Q,uCCVG,SAASC,KAAwB,IAAbC,EAAY,uDAAH,EAClC,OAAO,IAAIC,SAA0B,SAACC,GAAD,OACnCC,YAAW,kBAAMD,EAAQ,CAAEE,KAAMJ,MAAW,QCMhD,IAUaK,GAAiBC,aAC5B,qBAD4C,yCAE5C,WAAON,GAAP,gBAAAO,EAAA,sEACyBR,GAAWC,GADpC,cACQQ,EADR,yBAGSA,EAASJ,MAHlB,2CAF4C,uDASjCK,GAAeC,aAAY,CACtC1G,KAAM,UACN2G,aArBiC,CACjCtG,MAAO,EACPuG,OAAQ,QAqBRC,SAAU,CACRC,UAAW,SAACC,GAKVA,EAAM1G,OAAS,GAEjB2G,UAAW,SAACD,GACVA,EAAM1G,OAAS,GAGjB4G,kBAAmB,SAACF,EAAOG,GACzBH,EAAM1G,OAAS6G,EAAOC,UAK1BC,cAAe,SAACC,GACdA,EACGC,QAAQjB,GAAekB,SAAS,SAACR,GAChCA,EAAMH,OAAS,aAEhBU,QAAQjB,GAAemB,WAAW,SAACT,EAAOG,GACzCH,EAAMH,OAAS,OACfG,EAAM1G,OAAS6G,EAAOC,c,GAK6BV,GAAagB,QAmBzDhB,I,GAnBAK,U,GAAWE,U,GAAWC,kBAmBtBR,GAAf,SC9EaiB,GAAQC,aAAe,CAClCC,QAAS,CACPC,QAASC,M,UCOOC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,CAAUZ,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJa,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.31b95f19.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cv_img.8fe0113c.jpg\";","import React, {useState} from \"react\"\r\nimport {  Avatar, Box, Grid, Typography } from \"@material-ui/core\"\r\nimport { Apps,  AssignmentInd, ContactMail, Home } from \"@material-ui/icons\"\r\nimport CVImg from \"../img/cv_img.jpg\"\r\nimport styled, { css } from 'styled-components'\r\nimport { withTheme } from \"@material-ui/core/styles\";\r\nimport Typed from \"react-typed\"\r\n\r\n\r\nconst menuItems = [\r\n  {\r\n    icon: <Home/>,\r\n    text: \"Home\"\r\n  },\r\n  {\r\n    icon: <AssignmentInd/>,\r\n    text: \"Resume\"\r\n  },\r\n  {\r\n    icon: <Apps/>,\r\n    text: \"Portfolio\"\r\n  },\r\n  {\r\n    icon: <ContactMail/>,\r\n    text: \"Contact\"\r\n  }\r\n]\r\n\r\nconst AvatarImg = withTheme(styled(Avatar)`\r\n    width: ${props => props.theme.spacing(25)}px;\r\n    height: ${props => props.theme.spacing(25)}px;\r\n    margin: ${props => props.theme.spacing(15)};\r\n`)\r\n\r\nconst MainContainer = styled(Box)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 100vw;\r\n  text-align: center;\r\n  z-index: 1;\r\n`\r\n\r\nconst Title = styled(Typography)`\r\n  color: tan;\r\n  margin-bottom: -1rem;\r\n`\r\n\r\nconst Subtitle = styled(Typography)`\r\n  color: tomato;\r\n  margin-bottom: 2rem;\r\n`\r\n\r\nconst Header = () => {\r\n \r\n  return(\r\n    <>\r\n    <MainContainer>\r\n      <Grid container justify={\"center\"}>\r\n        <AvatarImg src={CVImg} alt=\"Alex González\"/>\r\n      </Grid>\r\n      <Title variant=\"h4\">\r\n        <Typed \r\n        strings={[\"Alex González\"]}\r\n        typeSpeed={40}\r\n        loop= {false}\r\n        />\r\n      </Title>\r\n      <br/>\r\n      <Subtitle variant=\"h5\">\r\n        <Typed \r\n        strings={[\"C# | .NET  | .NET Core | NodeJS | Bash\", \"React | Redux | TypeScript | Javascript\", \"Docker | Kubernetes | RabbitMQ \", \"GIT | Jenkins | Redis\",\"Agile | Scrum | Kanban\", \"- Full Stack Developer -\" ]}\r\n        typeSpeed={40}\r\n        backSpeed={20}       \r\n        />\r\n      </Subtitle>\r\n    </MainContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from '../component/header'\r\n\r\nexport default () => { \r\n  return(\r\n    <>   \r\n      <Header/>\r\n    </>\r\n  )\r\n}","import React from \"react\"\r\nimport CV from 'react-cv'\r\nimport CVImg from \"../img/cv_img.jpg\"\r\nimport styled, { css } from 'styled-components'\r\n\r\n\r\nconst ResumeCV = styled(CV)`\r\n  &&&{\r\n  background-color: #831212c1;\r\n  }\r\n`\r\n\r\n\r\n\r\nconst PortfolioComponent = () => {\r\n    return(\r\n        <ResumeCV \r\n        className={\"test\"}\r\n        personalData={{\r\n          name: 'Alex González',\r\n          title: 'Senior Full Stack Developer',\r\n          image: `${CVImg}`,\r\n          contacts: [\r\n            { type: 'email', value: 'agonzalezmartin33@gmail.com' },\r\n            { type: 'phone', value: '+34 692674402' },\r\n            { type: 'location', value: 'Barcelona' },\r\n            { type: 'website', value: 'agonzalezdev.github.io' },\r\n            { type: 'linkedin', value: 'linkedin.com/in/alex-gonzalez-705592137' },\r\n            { type: 'twitter', value: 'twitter.com' },\r\n            { type: 'github', value: 'github.com/agonzalezdev' }\r\n        ]}}\r\n        sections= {[\r\n          {\r\n          type: 'text',\r\n          title: 'Sobre mi',\r\n          content: 'Desde pequeño, siempre he sido un apasionado de la tecnología y todo lo que la rodea.',\r\n          icon: 'usertie'\r\n          },\r\n          {\r\n            type: 'projects-list',\r\n            title: 'Mis proyectos',\r\n            icon: 'rocket',\r\n            groups: [\r\n              {\r\n                sectionHeader: 'Tiendeo',\r\n                description: 'FullStack developer en cliente final a cargo de todos los proyectos de backend del equipo',\r\n                items: [\r\n                  { title: 'Cashback', projectUrl: 'tiendeo.com/cashback', description: 'Aplicación para ganar dinero mediante compras en supermercados' },\r\n                  { title: 'Cashback Customers', projectUrl: 'tiendeo.com', description: 'Aplicación para vender como SASS a otras empresas' },\r\n                  { title: 'Tiendeo', projectUrl: 'tiendeo.com', description: 'Aplicación de catálogos y ofertas personalizadas y geolocalizadas' },\r\n                ]\r\n              },\r\n              {\r\n                sectionHeader: 'Ulbe Group',\r\n                description: 'FullStack developer en consultora de proyectos',\r\n                items: [\r\n                  { title: 'Metro Madrid', projectUrl: 'metromadrid.com', description: 'Aplicación para gestionar rutas del metro de Madrid' },\r\n                  { title: 'Fox', projectUrl: 'fox.com', description: 'Aplicación CRM para empresa de mantenimiento' },\r\n                  { title: 'XXXX', projectUrl: 'xxxx.com', description: 'Aplicación CRM para gestión' },\r\n                ]\r\n              },\r\n              {\r\n                sectionHeader: 'T2 Study Wealth Management',\r\n                description: 'Junior developer en consultora de proyectos',\r\n                items: [\r\n                  { title: 'Múltiples proyectos', description: 'Múltiples proyectos' }\r\n                ]\r\n              }\r\n            ]\r\n            },\r\n        ]}\r\n        branding={false} // or false to hide it.\r\n      />\r\n    );\r\n}\r\n\r\nexport default PortfolioComponent;","import React from 'react';\r\nimport PortfolioComponent from '../component/portfolio'\r\n\r\nexport default () => { \r\n  return(\r\n    <>   \r\n      <PortfolioComponent/>\r\n    </>\r\n  )\r\n}","import React, {useState} from \"react\"\r\nimport { AppBar, Avatar, Box, Divider, IconButton, List, ListItem, ListItemIcon, ListItemText, Toolbar, Typography } from \"@material-ui/core\"\r\nimport { Apps, ArrowBack, AssignmentInd, ContactMail, Home, MenuOpen } from \"@material-ui/icons\"\r\nimport CVImg from \"../img/cv_img.jpg\"\r\nimport styled, { css } from 'styled-components'\r\nimport { withTheme } from \"@material-ui/core/styles\";\r\nimport MobileRightMenuSlider from \"@material-ui/core/Drawer\"\r\nimport { Link, Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst MenuContainer = styled(Box)`\r\n&&&{\r\n  width: 250px;\r\n  background: #511;\r\n  height: 100%;\r\n  z-index: 2;\r\n}\r\n`\r\n\r\nconst AvatarImage = withTheme(styled(Avatar)`\r\n  &&&{\r\n    display: block;\r\n    margin: 0.5rem auto;\r\n    width: ${props => props.theme.spacing(13)}px;\r\n    height: ${props => props.theme.spacing(13)}px;\r\n  }\r\n`);\r\n\r\nconst baseFontColor = css`\r\n  color: tan;\r\n`;\r\n\r\nconst MainBar = styled(AppBar)`\r\n  &&&{\r\n    background: #222\r\n  }\r\n`;\r\n\r\nconst MainToolBar = styled(Toolbar)`\r\n  &&&{\r\n    background: #222\r\n  }\r\n`;\r\n\r\nconst NavBarListIcon = styled(ListItemIcon)`\r\n  &&&{\r\n    ${baseFontColor}\r\n  }\r\n`;\r\n\r\nconst NavBarListText = styled(ListItemText)`\r\n  ${baseFontColor}\r\n`;\r\n\r\nconst menuItems = [\r\n  {\r\n    icon: <Home/>,\r\n    text: \"Home\",\r\n    path: '/'\r\n  },\r\n  {\r\n    icon: <AssignmentInd/>,\r\n    text: \"Resume\"\r\n  },\r\n  {\r\n    icon: <Apps/>,\r\n    text: \"Portfolio\",\r\n    path: \"/portfolio\"\r\n  },\r\n  {\r\n    icon: <ContactMail/>,\r\n    text: \"Contact\"\r\n  }\r\n]\r\n\r\nconst Navbar = () => {\r\n\r\n  let [showMenu, setShowMenu] = useState({\r\n    right: false\r\n  });\r\n\r\n  const toggleSlider = (slider, open) => {\r\n    setShowMenu({...showMenu, [slider]: open })\r\n  }\r\n\r\n  const sideList = slider => (\r\n    <MenuContainer component=\"div\" onClick={() => toggleSlider(\"right\", false)} >\r\n      <AvatarImage src={CVImg} alt=\"Alex González\"/>\r\n      <Divider/>\r\n      <List>\r\n        {menuItems.map((item,key) => (\r\n          //@ts-ignore\r\n          <ListItem button key={key} component={Link} to={item.path}>\r\n            <NavBarListIcon>{item.icon}</NavBarListIcon>\r\n            <NavBarListText>{item.text}</NavBarListText>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </MenuContainer>\r\n  );\r\n\r\n  return(\r\n    <>\r\n    <Box component=\"nav\">\r\n      <MainBar position=\"static\">\r\n        <MainToolBar>\r\n          <IconButton onClick={() => toggleSlider(\"right\", true) }>\r\n            <MenuOpen style={{color: \"#b11010\"}}/>\r\n          </IconButton>\r\n          <Typography variant=\"h5\"  style={{color: \"tan\"}}>Alex González</Typography>\r\n        </MainToolBar>\r\n        <MobileRightMenuSlider \r\n        anchor=\"right\" \r\n        open={showMenu.right}\r\n        onClose={() => toggleSlider(\"right\", false)}\r\n        >\r\n          {sideList(\"right\")}\r\n        </MobileRightMenuSlider>\r\n      </MainBar>\r\n    </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import {\n   BrowserRouter as Router,\n   Route\n   } from \"react-router-dom\";\nimport Home from \"./pages/home\"\nimport React from \"react\";\nimport Portfolio from \"./pages/portfolio\";\nimport Navbar from \"./component/navBar\";\n\n \n function AppRouter() {\n   return (\n     <Router>\n         <Navbar/>\n         <Route path=\"/\" exact component={() => <Home/>} />\n         <Route path=\"/portfolio\" component={() => <Portfolio/>} />\n         {/* <Route path=\"/gamestart\" exact component={() => <GameStart/>} /> */}\n         {/* <Route path=\"/portfolio\" component={(props: any) => <Terminal type={props.match.params.type} />} /> */}\n     </Router>\n   );\n }\n \n export default AppRouter;","import { useState } from \"react\";\r\nimport Particles from \"react-tsparticles\";\r\n\r\n\r\nexport default () => {  \r\n  return( \r\n\r\n\r\n  <Particles\r\n  id=\"tsparticles\"\r\n  options={{\r\n    background: {\r\n      color: {\r\n        value: \"#171e29\",\r\n      },\r\n    },\r\n    fpsLimit: 30,\r\n    fullScreen: { enable: true},\r\n    pauseOnBlur: true,\r\n    interactivity: {\r\n      detectsOn: \"window\",\r\n      events: {\r\n        onHover: {\r\n          enable: true,\r\n          mode: \"repulse\",\r\n        },\r\n        resize: true,\r\n      },\r\n      modes: {\r\n        bubble: {\r\n          distance: 400,\r\n          duration: 2,\r\n          opacity: 0.8,\r\n          size: 40,\r\n        },\r\n        push: {\r\n          quantity: 6,\r\n        },\r\n        repulse: {\r\n          distance: 100,\r\n          duration: 0.2,\r\n        },\r\n      },\r\n    },\r\n    particles: {\r\n      color: {\r\n        value: \"#ffffff\",\r\n      },\r\n      links: {\r\n        color: \"#ffffff\",\r\n        distance: 150,\r\n        enable: true,\r\n        opacity: 0.5,\r\n        width: 1,\r\n      },\r\n      collisions: {\r\n        enable: true,\r\n      },\r\n      move: {\r\n        direction: \"none\",\r\n        enable: true,\r\n        outMode: \"bounce\",\r\n        random: false,\r\n        speed: 2,\r\n        straight: false,\r\n      },\r\n      number: {\r\n        density: {\r\n          enable: true,\r\n          value_area: 600,\r\n        },\r\n        value: 80,\r\n      },\r\n      opacity: {\r\n        value: 0.5,\r\n      },\r\n      shape: {\r\n        type: \"circle\",\r\n      },\r\n      size: {\r\n        random: true,\r\n        value: 5,\r\n      },\r\n    },\r\n   // detectRetina: true,\r\n    }}\r\n  />\r\n)};\r\n","import React from 'react';\nimport './App.css';\nimport AppRouter from './Router';\nimport \"@fontsource/roboto\";\nimport DynamicBackground from \"./component/dynamicBackground\"\n\n\nfunction App() {\n  return (\n    <>\n    <DynamicBackground/>\n    <AppRouter/>\n    </>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}