{"version":3,"sources":["component/sidebar/sidebarStyles.ts","component/sidebar/index.tsx","component/navbar/navBarStyles.ts","component/navbar/index.tsx","img/cv_img.jpg","img/background.jpg","component/main/mainStyles.tsx","component/main/index.tsx","component/shared/section/styles.ts","component/shared/section/index.tsx","component/sections/stackItem.tsx","component/sections/stack.tsx","component/sections/cv.tsx","redux/slide/slideReducer.ts","component/dynamicBackground.tsx","pages/home.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["SidebarContainer","styled","aside","isOpen","CloseIcon","MenuBookOutlined","Icon","div","SidebarWrapper","SidebarLink","ScrollLink","SidebarMenu","ul","Sidebar","toggleOpen","onClick","to","Nav","nav","scrollNav","NavBarContainer","NavLogo","RouterLink","MobileIcon","MenuOpen","NavMenu","NavItem","li","NavLinks","NavBar","count","useSelector","state","slide","value","useDispatch","useState","activeSlide","GoToSlide","slideNr","fullpage_api","moveTo","useEffect","console","log","className","style","marginBottom","AvatarImg","withTheme","Avatar","props","theme","spacing","MainContainer","Box","Bckgrnd","MainBackground","MainContent","Title","Typography","Subtitle","ScrollButton","MainBlock","Grid","container","justifyContent","src","CVImg","alt","strings","typeSpeed","loop","showCursor","backSpeed","SectionContainer","lightBg","SectionWrapper","SectionRow","Column1","fullWidth","Column2","TextWrapper","TopLine","p","Heading","h1","lightText","darkText","ImgWrap","Img","img","Section","id","topLine","headLine","description","children","undefined","color","GridStackItem","GridStackItemWrapper","StackItem","xs","md","tooltip","item","data-tip","TechStacks","StackData","ligthText","imgStart","primary","CvData","slideSlice","createSlice","name","initialState","reducers","increment","set","action","payload","decrement","incrementByAmount","actions","options","fpsLimit","fullScreen","enable","pauseOnBlur","particles","number","density","value_area","line_linked","opacity","size","anim","speed","opacity_min","detectRetina","dispatch","setIsOpen","scrollOverflow","onLeave","origin","destination","direction","index","render","fullpageApi","CVData","App","path","exact","component","Home","store","configureStore","reducer","slideReducer","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.af490fa2.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { Link as ScrollLink } from \"react-scroll\";\r\nimport { MenuBookOutlined, MenuOpen } from \"@material-ui/icons\";\r\n\r\nexport const SidebarContainer = styled.aside<{ isOpen: boolean }>`\r\n    position: fixed;\r\n    z-index: 999;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #0d0d0d;\r\n    display: grid;\r\n    align-items: center;\r\n    top: 0;\r\n    left: 0;\r\n    transition: 0.3s ease-in-out;\r\n    opacity: ${({isOpen}) => (isOpen ? '100%' : '0')};\r\n    top: ${({isOpen}) => (isOpen ? '0' : '-100%')};\r\n`\r\n\r\nexport const CloseIcon = styled(MenuBookOutlined)`\r\n    color: #fff;\r\n`\r\n\r\nexport const Icon = styled.div`\r\n    position: absolute;\r\n    top: 1.2rem;\r\n    right: 1.5rem;\r\n    background: transparent;\r\n    font-size: 2rem;\r\n    cursor: pointer;\r\n    outline: none;\r\n`\r\n\r\nexport const SidebarWrapper = styled.div`\r\n    color: #fff;\r\n`\r\n\r\nexport const SidebarLink = styled(ScrollLink)`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 1.5rem;\r\n    text-decoration: none;\r\n    list-style: none;\r\n    transition: 0.2s ease-in-out;\r\n    color: #fff;\r\n    cursor: pointer;\r\n\r\n    &:hover{\r\n        color: red;\r\n        transition: 0.5s ease-in-out;\r\n    }\r\n`\r\n\r\nexport const SidebarMenu = styled.ul`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(6,80px);\r\n    text-align: center;\r\n\r\n    @media screen and (max-width: 480){\r\n        grid-template-rows: repeat(6,60px);\r\n    }\r\n`","import { IconButton } from '@material-ui/core';\r\nimport { MenuOpen } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { SidebarContainer, CloseIcon, Icon, SidebarLink, SidebarWrapper, SidebarMenu } from './sidebarStyles';\r\n\r\nconst Sidebar = ({ isOpen, toggleOpen }) => {\r\n    return (\r\n        <SidebarContainer isOpen={isOpen} onClick={toggleOpen}>\r\n            <Icon onClick={toggleOpen}>\r\n                <CloseIcon />\r\n            </Icon>\r\n            <SidebarWrapper>\r\n                <SidebarMenu>\r\n                    <SidebarLink to=\"\" onClick={toggleOpen}>Home</SidebarLink>\r\n                    <SidebarLink to=\"stack\" onClick={toggleOpen}>Stack</SidebarLink>\r\n                    <SidebarLink to=\"portfolio\" onClick={toggleOpen}>Portfolio</SidebarLink>\r\n                    <SidebarLink to=\"contact\" onClick={toggleOpen}>Contact</SidebarLink>\r\n                </SidebarMenu>\r\n            </SidebarWrapper>\r\n        </SidebarContainer>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import styled from \"styled-components\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { MenuOpen } from \"@material-ui/icons\";\r\n\r\nexport const Nav = styled.nav<{scrollNav}>`\r\n    background: ${({scrollNav}) => (scrollNav ? 'transparent' : 'black')};\r\n    -webkit-transition: background-color 1s ease-out;\r\n    -moz-transition: background-color 1s ease-out;\r\n    -o-transition: background-color 1s ease-out;\r\n    transition: background-color 1s ease-out;\r\n    height: 75px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 1rem;\r\n    position: fixed;\r\n    width: 100%;\r\n    top: 0;\r\n    z-index: 100;\r\n\r\n    @media screen and (max-width: 768px){\r\n        transition: 0.8s all ease;\r\n        height: 45px;\r\n    }\r\n`\r\n\r\nexport const NavBarContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 80px;\r\n    z-index: 1;\r\n    width: 100%;\r\n    padding: 0 24px;\r\n    max-width: 1100px;\r\n\r\n    @media screen and (max-width: 768px){\r\n        transition: 0.8s all ease;\r\n        height: 45px;\r\n    }\r\n`\r\n\r\nexport const NavLogo = styled(RouterLink)`\r\n    color: #c50000;\r\n    justify-self: flex-start;\r\n    cursor: pointer;\r\n    font-size: 1.9rem;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: -8px;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n`\r\n\r\nexport const MobileIcon = styled(MenuOpen)`\r\n&&&{\r\n    display: none;\r\n\r\n    @media screen and (max-width: 768px){\r\n        display: block;\r\n        position: absolute;\r\n        top: -8px;\r\n        right: -9px;\r\n        transform: translate(-100%, 60%);\r\n        font-size: 1.8rem;\r\n        cursor: pointer;\r\n        color: #fff;\r\n    }\r\n}\r\n`\r\n\r\nexport const NavMenu = styled.ul`\r\n    display: flex;\r\n    align-items: center;\r\n    list-style: none;\r\n    text-align: center;\r\n    margin-right: -22px;\r\n    @media screen and (max-width: 768px){\r\n        display: none;\r\n    }\r\n`\r\n\r\nexport const NavItem = styled.li`\r\n    height: 80px;\r\n`\r\n\r\nexport const NavLinks = styled.div`\r\n    color: #fff;\r\n    display: flex;\r\n    align-items: center;\r\n    text-decoration: none;\r\n    padding: 0 1rem;\r\n    height: 100%;\r\n    cursor: pointer;\r\n    font-size: 1.2rem;\r\n\r\n    &.active {\r\n        border-bottom: 4px solid red;\r\n    }\r\n`","import { IconButton } from '@material-ui/core';\r\nimport { MenuOpen } from '@material-ui/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\nimport { RootState } from '../../app/store';\r\nimport { Nav, NavBarContainer, NavLogo, MobileIcon, NavMenu, NavLinks, NavItem } from './navBarStyles';\r\nimport {\r\n    AiFillStar,\r\n    AiOutlineHome,\r\n    AiOutlineFundProjectionScreen,\r\n    AiOutlineUser,\r\n} from \"react-icons/ai\";\r\nimport { CgFileDocument } from \"react-icons/cg\";\r\n\r\nconst NavBar = ({ toggleOpen }) => {\r\n    const count = useSelector((state: RootState) => state.slide.value)\r\n    const dispatch = useDispatch();\r\n\r\n    const [activeSlide, setActiveSlide] = useState(0);\r\n\r\n    const GoToSlide = (slideNr) => {\r\n        //@ts-ignore\r\n        fullpage_api.moveTo(slideNr);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(activeSlide);\r\n    }, [activeSlide])\r\n\r\n    return (\r\n        <>\r\n            <Nav scrollNav={count == 1}>\r\n                <NavBarContainer>\r\n                    <NavLogo to='/' onClick={() => GoToSlide(1)} className={count == 1 ? \"active\" : \"\"} >\r\n                        AG\r\n                    </NavLogo>\r\n                    <MobileIcon onClick={toggleOpen}>\r\n                    </MobileIcon>\r\n                    <NavMenu>\r\n                        <NavItem >\r\n                            <NavLinks\r\n                                onClick={() => GoToSlide(2)}\r\n                                className={count == 2 ? \"active\" : \"\"}\r\n                            >\r\n                                <AiOutlineFundProjectionScreen\r\n                                    style={{ marginBottom: \"2px\" }}\r\n                                />{\" \"}\r\n                                Stack</NavLinks>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLinks\r\n                                onClick={() => GoToSlide(3)}\r\n                                className={count == 3 ? \"active\" : \"\"}\r\n                            >\r\n                                <CgFileDocument style={{ marginBottom: \"2px\" }} />\r\n                                Currículum</NavLinks>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLinks>\r\n                                <AiOutlineUser style={{ marginBottom: \"2px\" }} />\r\n                            Contacto</NavLinks>\r\n                        </NavItem>\r\n                    </NavMenu>\r\n                </NavBarContainer>\r\n            </Nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","export default __webpack_public_path__ + \"static/media/cv_img.8fe0113c.jpg\";","export default __webpack_public_path__ + \"static/media/background.86a39909.jpg\";","import React from \"react\"\r\nimport { Avatar, Box, Typography } from \"@material-ui/core\"\r\nimport styled, { css } from 'styled-components'\r\nimport { withTheme } from \"@material-ui/core/styles\";\r\nimport Bckgrnd from \"../../img/background.jpg\"\r\n\r\nexport const AvatarImg = withTheme(styled(Avatar)`\r\n  &&&{\r\n    width: ${props => props.theme.spacing(20)}px;\r\n    height: ${props => props.theme.spacing(20)}px;\r\n    margin: ${props => props.theme.spacing(20)};\r\n  }\r\n`)\r\n\r\nexport const MainContainer = styled(Box)`\r\n  background-image: url(${Bckgrnd});\r\n  -webkit-background-size: cover;\r\n  -moz-background-size: cover;\r\n  -o-background-size: cover;\r\n  background-size: cover;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 30px;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n\r\n  @media screen and (max-width: 768){\r\n        height: 100%\r\n    }\r\n`\r\n\r\nexport const MainBackground = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden; \r\n`\r\n\r\nexport const MainContent = styled.div`\r\n  position: absolute;\r\n  z-index: 3;\r\n  max-width: 1200px;\r\n  padding: 8px 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: -20vh;\r\n  z-index: 3;\r\n`\r\n\r\nexport const Title = styled(Typography)`\r\n  &&&{\r\n    color: tan;\r\n    margin-bottom: -1.8rem;\r\n    font-size: 2.5rem;\r\n\r\n    @media screen and (max-width: 768px){\r\n      font-size: 2.0rem;\r\n    }\r\n  }\r\n`\r\n\r\nexport const Subtitle = styled(Typography)`\r\n  &&&{\r\n    color: tomato;\r\n    font-size:  1.9rem;\r\n    overflow: hidden; \r\n    white-space: nowrap;\r\n\r\n    @media screen and (max-width: 768px){\r\n      font-size:  1.5rem;;\r\n    }\r\n  }\r\n`\r\nconst ScrollButtonWrapper = () => {\r\n  return (\r\n    <div className=\"mouse_scroll\">\r\n      <div className=\"mouse\">\r\n        <div className=\"wheel\"></div>\r\n      </div>\r\n      <div>\r\n        <span className=\"m_scroll_arrows unu\"></span>\r\n        <span className=\"m_scroll_arrows doi\"></span>\r\n        <span className=\"m_scroll_arrows trei\"></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const ScrollButton = styled(ScrollButtonWrapper)`\r\n    \r\n`\r\n\r\n","import React, { useState } from \"react\"\r\nimport { Avatar, Box, Grid, Typography } from \"@material-ui/core\"\r\nimport { Apps, AssignmentInd, ContactMail, Home } from \"@material-ui/icons\"\r\nimport CVImg from \"../../img/cv_img.jpg\"\r\nimport styled, { css } from 'styled-components'\r\nimport { withTheme } from \"@material-ui/core/styles\";\r\nimport Typed from \"react-typed\"\r\nimport { AvatarImg, MainBackground, MainContainer, MainContent, ScrollButton, Subtitle, Title } from \"./mainStyles\"\r\nimport DynamicBackground from \"../dynamicBackground\"\r\nimport { Button } from \"../shared/button\"\r\n\r\n\r\nconst MainBlock = () => {\r\n\r\n  const [response, setResponse] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <MainContainer>\r\n        <MainBackground />\r\n        <MainContent>\r\n          <Grid container justifyContent={\"center\"}>\r\n            <AvatarImg src={CVImg} alt=\"Alex González\" />\r\n          </Grid>\r\n          <Title>\r\n            <Typed\r\n              strings={[\"Alex González\"]}\r\n              typeSpeed={40}\r\n              loop={false}\r\n              showCursor={false}\r\n            />\r\n          </Title>\r\n          {/* <p>{response}: </p> */}\r\n          <br />\r\n          <Subtitle>\r\n            <Typed\r\n              strings={[\"C# | .NET  | NodeJS\", \"React | TypeScript | Javascript\", \"Docker | Kubernetes | RabbitMQ \", \"GIT | Jenkins | Redis\", \"Agile | Scrum | Kanban\", \"- Fullstack Developer -\"]}\r\n              typeSpeed={40}\r\n              backSpeed={10}\r\n            />\r\n          </Subtitle>\r\n\r\n\r\n          {/* <Button to=\"signup\" primary={true} big={true} dark={true} fontBig={true}>Ver mi CV</Button> */}\r\n        </MainContent>\r\n        <ScrollButton />\r\n      </MainContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainBlock;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '../button'\r\n\r\nexport const SectionContainer = styled.div<{id, lightBg}>`\r\n    color: #fff;\r\n    background: ${({lightBg}) => (lightBg ? '#f9f9f9' : '#010606')};\r\n\r\n    @media screen and (max-width: 768px){\r\n        padding: 50px 0;\r\n    }\r\n`\r\n\r\nexport const SectionWrapper = styled.div`\r\n    display: grid;\r\n    z-index: 1;\r\n    width: 100%;\r\n    max-width: 90vh;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    justify-content: center;\r\n`\r\n\r\nexport const SectionRow = styled.div`\r\n    align-items: center;\r\n`\r\n\r\nexport const Column1 = styled.div<{fullWidth}>`\r\n    margin-bottom: 15px;\r\n    padding: 0 15px;\r\n    grid-area: ${({fullWidth}) => (fullWidth ? 'col1 col2' : 'col1')};\r\n`\r\n\r\nexport const Column2 = styled.div`\r\n    margin-bottom: 15px;\r\n    padding: 0 15px;\r\n    grid-area: col2\r\n`\r\n\r\nexport const TextWrapper = styled.div`\r\n    max-width: 100%;\r\n    padding-top: 0;\r\n    padding-bottom: 60px;\r\n`\r\n\r\nexport const TopLine = styled.p`\r\n    color: red;\r\n    font-size: 16px;\r\n    line-height: 16px;\r\n    font-weight: 700;\r\n    letter-spacing: 1.4px;\r\n    text-transform: uppercase;\r\n    margin-bottom: 16px;\r\n`\r\n\r\nexport const Heading = styled.h1<{lightText}>`\r\n    margin-bottom: 24px;\r\n    font-size: 48px;\r\n    line-height: 1.1;\r\n    font-weight: 600;\r\n    color: red;\r\n    letter-spacing: 1.4px;\r\n    color: ${({lightText}) => (lightText ? '#f7f8fa' : '#010606')};\r\n    \r\n    @media screen and (max-width: 480px){\r\n        font-size: 32px\r\n    }\r\n`\r\n\r\nexport const Subtitle = styled.p<{darkText}>`\r\n    margin-bottom: 20px;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    color: ${({darkText}) => (darkText ? '#010606' : '#fff')};\r\n`\r\n\r\nexport const ImgWrap = styled.div`\r\n    max-width: 555px;\r\n    height: 100%;\r\n`\r\n\r\nexport const Img = styled.img`\r\n    width: 100%;\r\n    margin: 0 0 10px 0;\r\n    padding-right: 0;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '../button'\r\nimport { SectionContainer, SectionWrapper, SectionRow, Column1, TextWrapper, TopLine, Heading, Subtitle, Column2, ImgWrap, Img, } from \"./styles\"\r\n\r\nconst MainSectionWrapper = styled.div`\r\n    color: #fff\r\n`\r\n\r\nconst Section = ({ id, lightBg, topLine, headLine, description, alt, children, img = undefined, }) => {\r\n    return (\r\n        <>\r\n            <SectionContainer id={id} lightBg={lightBg}>\r\n                <SectionWrapper>\r\n                    <SectionRow >\r\n                        <Column1 fullWidth={img == undefined}>\r\n                            <TextWrapper>\r\n                                <TopLine>{topLine}</TopLine>\r\n                                <Heading lightText={!lightBg}>{headLine}</Heading>\r\n                                <Subtitle darkText={lightBg}>{description}</Subtitle>\r\n                                <div style={{ color: \"black\" }}> {children} </div>\r\n                                {/* <BtnWrap>\r\n                            <Button></Button>\r\n                        </BtnWrap> */}\r\n                            </TextWrapper>\r\n                        </Column1>\r\n                        {img != undefined ?\r\n                            <Column2 >\r\n                                <ImgWrap>\r\n                                    <Img src={img} alt={alt} />\r\n                                </ImgWrap>\r\n                            </Column2>\r\n                            : <></>\r\n                        }\r\n                    </SectionRow>\r\n                </SectionWrapper>\r\n            </SectionContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Section\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport styled, { css } from 'styled-components'\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\n\r\nconst GridStackItem = styled(Grid)`\r\n    &&&{\r\n        flex-grow: 0;\r\n        display: flex;\r\n        max-width: 50%;\r\n        flex-basis: 50%;\r\n        flex-direction: column;\r\n        align-items: stretch;\r\n    }\r\n`\r\n\r\nconst GridStackItemWrapper = styled.div`\r\n&&&{\r\n   font-size: 4.5em;\r\n    margin: 15px;\r\n    padding: 10px;\r\n    opacity: 0.93;\r\n    border: 1.7px solid rgb(223 31 31 / 64%);\r\n    vertical-align: middle;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    display: table;\r\n    box-shadow: 4px 5px 4px 3px rgb(168 4 4 / 14%);\r\n    overflow: hidden;\r\n    transition: all 0.4s ease 0s;\r\n    color: white;\r\n    justify-content: space-around;\r\n    display: flex;\r\n}\r\n`\r\n\r\n\r\nconst StackItem = ({ xs, md, tooltip = \"\", children }) => (\r\n    <GridStackItem item xs={xs} md={md} data-tip={tooltip}>\r\n        <GridStackItemWrapper>\r\n            {children}\r\n            <ReactTooltip />\r\n        </GridStackItemWrapper>\r\n    </GridStackItem>\r\n);\r\n\r\n\r\nexport default StackItem;","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport StackItem from \"./stackItem\";\r\nimport {\r\n    SiDotNet, SiCsharp, SiTypescript, SiRedis, SiKubernetes, SiRabbitmq,\r\n    SiNuget, SiPostgresql, SiMicrosoftsqlserver, SiJson,\r\n    SiGnubash\r\n} from \"react-icons/si\";\r\nimport {\r\n    FaNode, FaReact, FaDocker, FaJenkins\r\n} from \"react-icons/fa\";\r\nimport { DiGit, DiDotnet } from \"react-icons/di\";\r\nimport { IoLogoJavascript } from \"react-icons/io\";\r\nimport { AiOutlineApi } from \"react-icons/ai\";\r\nimport { GrGraphQl } from \"react-icons/gr\";\r\n\r\nconst TechStacks = () => (\r\n    <Grid container justifyContent=\"center\" spacing={0}>\r\n        <StackItem xs={6} md={2} tooltip=\"Dotnet Framework\">\r\n            <SiDotNet />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"NodeJS\">\r\n            <FaNode />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\".NET CORE 2,3 & 5\">\r\n            <DiDotnet />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"C# 6+\">\r\n            <SiCsharp />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"Javascript\">\r\n            <IoLogoJavascript />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"TypeScript\">\r\n            <SiTypescript />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"ReactJS\">\r\n            <FaReact />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"Github, Gitlab\">\r\n            <DiGit />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"Redis\">\r\n            <SiRedis />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"Docker, docker-compose with YAML\">\r\n            <FaDocker />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"Kubernetes\">\r\n            <SiKubernetes />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"RabbitMQ \">\r\n            <SiRabbitmq />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"PostgreSQL\">\r\n            <SiPostgresql />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"MSSQL \">\r\n            <SiMicrosoftsqlserver />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"Jenkins \">\r\n            <FaJenkins />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"JSON \">\r\n            <SiJson />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"API Rest\">\r\n            <AiOutlineApi />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"GraphQL \">\r\n            <GrGraphQl />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"Bash scripting \">\r\n            <SiGnubash />\r\n        </StackItem>\r\n        <StackItem xs={6} md={2} tooltip=\"NuGet\">\r\n            <SiNuget />\r\n        </StackItem>\r\n    </Grid>\r\n);\r\n\r\nconst StackData = {\r\n    id: 'stack',\r\n    lightBg: false,\r\n    ligthText: false,\r\n    topLine: 'Stack',\r\n    headLine: 'Stack tecnológicos',\r\n    description: 'He utilizado los siguientes lenguajes, herramientas y frameworks durante mi trayectoria profesional',\r\n    imgStart: false,\r\n    //img: NetNodeImg,\r\n    alt: 'stack',\r\n    primary: true,\r\n    darkText: false,\r\n    children: (<>\r\n        <TechStacks />\r\n    </>)\r\n}\r\n\r\nexport default StackData;","const CvData = {\r\n    id: 'cv',\r\n    lightBg: false,\r\n    ligthText: false,\r\n    topLine: 'CV',\r\n    headLine: 'Currículum detallado',\r\n    description: 'Currículum con todos los datos personales y laborales',\r\n    imgStart: false,\r\n    alt: 'cv',\r\n    primary: false,\r\n    darkText: false\r\n}\r\n\r\nexport default CvData;","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n\r\nexport interface SlideState {\r\n  value: number\r\n}\r\n\r\nconst initialState: SlideState = {\r\n  value: 1,\r\n}\r\n\r\nexport const slideSlice = createSlice({\r\n  name: 'slide',\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.value += 1\r\n    },\r\n    set: (state, action: PayloadAction<number>) => {\r\n      state.value = action.payload\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount, set } = slideSlice.actions\r\nexport default slideSlice.reducer","import { useState } from \"react\";\r\nimport Particles from \"react-tsparticles\";\r\nimport Bckgrnd from \"../img/background.jpg\"\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <Particles\r\n      id=\"tsparticles\"\r\n      options={{\r\n        fpsLimit: 30,\r\n        fullScreen: { enable: true },\r\n        pauseOnBlur: true,\r\n        particles: {\r\n          number: {\r\n            value: 160,\r\n            density: {\r\n              enable: true,\r\n              value_area: 300,\r\n            },\r\n          },\r\n          line_linked: {\r\n            enable: false,\r\n            opacity: 0.03,\r\n          },\r\n          size: {\r\n            value: 1,\r\n          },\r\n          opacity: {\r\n            anim: {\r\n              enable: true,\r\n              speed: 1,\r\n              opacity_min: 0.05,\r\n            },\r\n          },\r\n        },\r\n        detectRetina: true,\r\n      }}\r\n    />\r\n  )\r\n};\r\n","import React, { useState } from 'react';\r\nimport Sidebar from '../component/sidebar/index'\r\nimport Navbar from '../component/navbar/index';\r\nimport MainBlock from '../component/main';\r\nimport Section from '../component/shared/section/index';\r\nimport StackData from \"../component/sections/stack\"\r\nimport CVData from \"../component/sections/cv\"\r\nimport Portfolio from \"../component/portfolio/index\"\r\nimport ReactFullpage from '@fullpage/react-fullpage';\r\nimport { Console } from 'console';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../app/store';\r\nimport { increment, decrement, set } from \"../redux/slide/slideReducer\"\r\nimport DynamicBackground from '../component/dynamicBackground';\r\n\r\n\r\nexport default () => {\r\n  const count = useSelector((state: RootState) => state.slide.value)\r\n  const dispatch = useDispatch();\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => {\r\n    setIsOpen(!isOpen);\r\n  }\r\n  const onSectionLeave = (origin, destination, direction) => {\r\n    dispatch(set(destination.index + 1));\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n      <Sidebar isOpen={isOpen} toggleOpen={toggleOpen} />\r\n      <Navbar toggleOpen={toggleOpen} />\r\n\r\n      <ReactFullpage\r\n        scrollOverflow={true}\r\n        onLeave={onSectionLeave}\r\n        render={({ state, fullpageApi }) => {\r\n          return (\r\n            <div id=\"fullpage-wrapper\">\r\n              <div className=\"section\" >\r\n                <MainBlock />\r\n              </div>\r\n              <div className=\"section\">\r\n                <div className=\"slide\">\r\n                  <DynamicBackground />\r\n                  <Section {...StackData} ></Section>\r\n                </div>\r\n              </div>\r\n              <div className=\"section\">\r\n                <Section {...CVData} >\r\n\r\n                  {/* <Portfolio /> */}\r\n                </Section>\r\n                <button onClick={() => fullpageApi.moveTo(1, 0)}>\r\n                  Move top\r\n                    </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n    </>\r\n  )\r\n}","import React, { useState } from 'react';\nimport './App.scss';\nimport \"@fontsource/roboto\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/home\";\nimport Navbar from \"./component/navbar/index\"\n\nfunction App() {\n\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleOpen = () => {\n    setIsOpen(!isOpen);\n  }\n\n  return (\n    <BrowserRouter>\n      {/* <Preloader load={load} /> */}\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          {/* <Route path=\"/project\" component={Projects} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/resume\" component={Resume} /> */}\n        </Switch>\n        {/* <Footer /> */}\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport slideReducer from '../redux/slide/slideReducer';\n\nexport const store = configureStore({\n  reducer: {\n    slide: slideReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}